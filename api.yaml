swagger: "2.0"
info:
  title: SOFT DRINK API
  description: This API consist of login register for customer and role of admin can access all the operation and customer can only access get operation of product and category , product and category api with CURD operation, filter and pagination.
  version: 1.0
  contact:
    email: kamnasao@yahoo.com
  liscence:
    name: Apache 2.0
    url: "http://apache.org/"
  servers:
    -url: "http://localhost:8000/"
    description: this is my local server 
  
schemes: [http,https]

securityDefinitions:
  Bearer:
    type: apiKey
    name: auth
    in: header

paths:
  /customerapi/RegisterCustomer:
    post:
      summary: you can register here as 2 role that is "admin" and "customer".
      description: here customer can register them self by simply adding email password and role("admin","customer").
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: body
          name: products
          schema:
            type: object
            properties:
              email:
                type: string
                example: abc@gmail.com
                required: true
              password:
                type: string
                example: abcd
                required: true
              cpass:
                type: string 
                example: abcd
                required: true
              role:
                enum: [admin , customer]
                example: customer
                required: true
      responses:
        200:
          description: OK
        400:
          description:  
        500:
          description: Internal Server Error  
  /customerapi/getRegisteredCustomer:
    get:
      summary: Returns array of users only admin has access to this
      description: array of users only admin has access to this , if customer try to access it will give error message.
      security:
        - Bearer: []
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              type: object
              properties:
                email:
                  type: string
                  example: abc@gmail.com
                password:
                  type: string
                  example: abcd
                cpass:
                  type: string
                  example: customer
                role:
                  type: string
                  example: customer
        400:
          description: product  Error
        500:
          description: Internal Server Error

  /customerapi/login:
    post:
      summary: register user can login here as per there role token is generated , only add valid role that is "admin" or "customer"
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: body
          name: products
          schema:
            type: object
            properties:
              email:
                type: string
                example: abc@gmail.com
                required: true
              password:
                type: string
                example: abcd
                required: true
              role:
                type: string 
                example: customer 
                required: true  
      responses:
        200:
          description: OK
        400:
          description: product  Error
        500:
          description: Internal Server Error 

  /category:
    get:
      summary: get all the category
      description: Category details like verities example diet cock , zero sugar, normal ,energy drink flavors are vanilla, mango , orignal , cheery and customised can be true or false  
      security:
        - Bearer: []
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              type: object
              properties:
                verities:
                  type: string
                  example: diet coke
                  required: true
                customized:
                  type: boolean
                  example: true
                  required: true
                favor:
                  type: string
                  example: original 
                  required: true
                
        400:
          description: category  Error
        500:
          description: Internal Server Error    
#find by id------
  /category/{_id}:
    get:
      summary: get a category by giving id from the category list above.
      description: return a particular category with has this id.
      security:
        - Bearer: []
      parameters:
        - name: _id
          in: path
          required: true
          schema: 
            type: integer
      responses: 
        200:
          description: Success
          schema:
              type: object
              properties:
                verities:
                  type: string
                  example: diet coke
                  required: true
                customized:
                  type: boolean
                  example: true
                  required: true
                favor:
                  type: string
                  example: original 
                  required: true
        400:
          description: User Error
        500:
          description: Internal Server Error 

  /category/postCategory:
    post:
      summary: posting data of category in the data base can copy the id to use it feather in product post only admin can post here .
      produces:
        - application/json
      consumes:
        - application/json
      security:
        - Bearer: []
      parameters:
        - in: body
          name: user
          schema:
            type: object
            properties:
                verities:
                  type: string
                  example: diet coke
                  required: true
                customized:
                  type: boolean
                  example: true
                  required: true
                favor:
                  type: string
                  example: original 
                  required: true
      responses:
        200:
          description: OK

  /category/update/{_id}:
    put:
      summary: update the posted category data here using id ,only admin is provide with this access.
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - name: _id
          in: path
          required: true
          schema: 
            type: integer
        - in: body
          name: user
          schema:
            type: object
            properties:
                verities:            
                  type: string
                  example: zero sugar
                  required: true
                customized:
                  type: boolean
                  example: false
                  required: true
                favor:
                  type: string
                  example: original 
                  required: true
      security:
        - Bearer: []
      responses: 
        200:
          description: Success
          schema:
              type: object
              properties:
                gender:
                  type: string
                color:
                 type: string
        400:
          description: User Error
        500:
          description: Internal Server Error 


  /category/delete/{_id}:
    delete:
      summary: delete the posted category by the id , only admin is provide with this access
      description: return message.
      parameters:
        - name: _id
          in: path
          required: true
          schema: 
            type: integer
      security:
        - Bearer: []            
      responses: 
        200:
          description: Successfully deleted
        400:
          description: User Error
        500:
          description: Internal Server Error 

  /products:
    get:
      summary: Returns array of products .
      description:  Returns array of products  both can access, it has filter ,pagination include by defaut page and limit is 1 uh can change it accordingly by providing page no. and limit. by default 1st data will be visible if filtered it will show accordily.
      parameters:
        - in: query
          name: category
          type: string
          description: category_id           
        - in: query
          name: brand
          type: string
        - in: query
          name: price
          type: integer 
          enum: [80,100,150,200]
        - in: query
          name: page
          type: integer
        - in: query
          name: limit
          type: integer

      security:
        - Bearer: []          
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              type: object
              properties:
                  description:
                    type: string
                  image:
                    type: string
                  brand:
                    type: string   
                  price:
                    type: integer
                  instock:
                    type: integer
                  category:
                    type: string
                  isFeature:
                    type: boolean
                  dateCreated:
                    type: date
                       
        400:
          description: product  Error
        500:
          description: Internal Server Error

  /products/{_id}:
    get:
      summary: Returns only single product uses valid id .
      description: object of product.
      parameters:
        - name: _id
          in: path
          required: true
          schema: 
            type: integer
      security:
        - Bearer: []            
      responses: 
        200:
          description: Success
          schema:
              type: object
              properties:
                description:
                  type: string
                name:
                  type: string
                image:
                  type: string
                brand:
                  type: string   
                price:
                  type: integer
                instock:
                  type: integer
                category:
                  type: string
                isFeature:
                  type: boolean
        400:
          description: User Error
        500:
          description: Internal Server Error 

  /products/create:
    post:
      summary: posting of pucduct it is access only to the admin.
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: body
          name: products
          schema:
            type: object
            properties:
              description:
                type: string
                required: true
                example: this is a healthy coke
              image:
                type: string
                required: true
                example: https://www.bing.com/th?id=OIP.xTGyPjw0ni69GJflYtsqEgHaHa&w=250&h=250&c=8&rs=1&qlt=90&o=6&dpr=1.3&pid=3.1&rm=2
              brand:
                type: string
                required: true  
                example: "coco-cola"
              price:
                type: integer
                required: true
                example: 100
              instock:
                type: integer
                required: true
                example: 200
              category:
                type: string
                example: 635c12865381af2c3e925d31
                required: true
              isFeature:
                type: boolean
                required: true
                example: true
      security:
        - Bearer: []
      responses:
        200:
          description: OK
        400:
          description: product  Error
        500:
          description: Internal Server Error

  /products/update/{_id}:
    put:
      summary: update the data by there id, only admin has access to it.
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - name: _id
          in: path
          required: true
          schema: 
            type: integer
        - in: body
          name: user
          schema:
            type: object
            properties:
              description:
                type: string
                required: true
                example: this ia a diet coke with cheery falvor
              image:
                type: string
                required: true
                example: https://i5.walmartimages.com/asr/4c02d4e6-a587-4e58-ac41-6cacc7a5f573.c6290e081b674ca3c2029adb4c40e0ba.jpeg
              brand:
                type: string  
                required: true 
                example: coco-cola
              price:
                type: integer
                required: true
                example: 200
              instock:
                type: integer
                required: true
                example: 150
              category:
                type: string
                required: true
                example: 635c12b65381af2c3e925d33
              isFeature:
                type: boolean
                required: true
                example: true
      security:
        - Bearer: []      
      responses: 
        200:
          description: Success
          schema:
              type: object
              properties:
                gender:
                  type: string
                color:
                 type: string
        400:
          description: User Error
        500:
          description: Internal Server Error 

  /products/delete/{_id}:
    delete:
      summary: delete the product by id only admin is given access
      description: delete the product displayed
      parameters:
        - name: _id
          in: path
          required: true
          schema: 
            type: integer
      security:
        - Bearer: []            
      responses: 
        200:
          description: Success
        400:
          description: User Error
        500:
          description: Internal Server Error 
  
  /products/get/count:
    get:
      summary: get count of all the products only admin has access
      description: count of all product list
      security:
        - Bearer: []
      responses: 
        200:
          description: Success
          schema:
              type: object
              properties:
                count:
                 type: integer
        400:
          description: User Error
        500:
          description: Internal Server Error 